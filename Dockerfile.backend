# 后端Dockerfile - 优化的多阶段构建
FROM golang:1.21-alpine AS builder

# 安装必要的包
RUN apk add --no-cache git

# 设置工作目录
WORKDIR /app

# 复制go mod文件
COPY go.mod go.sum ./
RUN go mod download

# 复制整个项目
COPY . .

# 构建应用 - 极限内存优化
ENV CGO_ENABLED=0
ENV GOOS=linux
ENV GOARCH=amd64
ENV GOGC=20
ENV GOMAXPROCS=1
RUN go build -a -installsuffix cgo -ldflags="-s -w -extldflags '-static'" -o main ./backend/cmd/main.go

# 最终镜像
FROM alpine:latest

# 安装ca-certificates用于HTTPS
RUN apk --no-cache add ca-certificates

WORKDIR /root/

# 从构建阶段复制二进制文件
COPY --from=builder /app/main .

# 创建上传目录
RUN mkdir -p uploads

EXPOSE 8080

CMD ["./main"]