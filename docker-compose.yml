# Docker Compose配置 - 优化内存使用
version: '3.8'

services:
  # PostgreSQL数据库
  database:
    image: postgres:16-alpine
    container_name: blog_database
    environment:
      POSTGRES_DB: techblog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      # 优化PostgreSQL内存使用
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d techblog"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go后端服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: blog_backend
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: techblog
      DB_USER: postgres
      DB_PASSWORD: postgres123
      JWT_SECRET: your-super-secret-jwt-key-here
      GIN_MODE: release
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.3'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 15s
      timeout: 5s
      retries: 3

  # Nginx前端服务
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: blog_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          memory: 32M
          cpus: '0.2'

volumes:
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge